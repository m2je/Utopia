package ir.utopia.core.security.persistent;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.MappedSuperclass;
import javax.persistence.OneToMany;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * AbstractCoApplication generated by MyEclipse Persistence Tools
 */
@MappedSuperclass
public abstract class AbstractCoApplication implements java.io.Serializable {

	// Fields

	private Long coApplicationId;
	private String name;
	private String secretKey;
	private Long isacive;
	private Date created;
	private Date updated;
	private Long createdby;
	private Long updatedby;
	private Set<CoUserAppToken> coUserAppTokens = new HashSet<CoUserAppToken>(0);
	private Set<CoAppUscsAccss> coAppUscsAccsses = new HashSet<CoAppUscsAccss>(
			0);

	// Constructors

	/** default constructor */
	public AbstractCoApplication() {
	}

	/** minimal constructor */
	public AbstractCoApplication(Long coApplicationId, String name,
			String secretKey, Long isacive, Date created, Date updated,
			Long createdby, Long updatedby) {
		this.coApplicationId = coApplicationId;
		this.name = name;
		this.secretKey = secretKey;
		this.isacive = isacive;
		this.created = created;
		this.updated = updated;
		this.createdby = createdby;
		this.updatedby = updatedby;
	}

	/** full constructor */
	public AbstractCoApplication(Long coApplicationId, String name,
			String secretKey, Long isacive, Date created, Date updated,
			Long createdby, Long updatedby,
			Set<CoUserAppToken> coUserAppTokens,
			Set<CoAppUscsAccss> coAppUscsAccsses) {
		this.coApplicationId = coApplicationId;
		this.name = name;
		this.secretKey = secretKey;
		this.isacive = isacive;
		this.created = created;
		this.updated = updated;
		this.createdby = createdby;
		this.updatedby = updatedby;
		this.coUserAppTokens = coUserAppTokens;
		this.coAppUscsAccsses = coAppUscsAccsses;
	}

	// Property accessors
	@Id
	@Column(name = "CO_APPLICATION_ID", unique = true, nullable = false, insertable = true, updatable = true, precision = 10, scale = 0)
	public Long getCoApplicationId() {
		return this.coApplicationId;
	}

	public void setCoApplicationId(Long coApplicationId) {
		this.coApplicationId = coApplicationId;
	}

	@Column(name = "NAME", unique = true, nullable = false, insertable = true, updatable = true, length = 3000)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "SECRET_KEY", unique = false, nullable = false, insertable = true, updatable = true, length = 3000)
	public String getSecretKey() {
		return this.secretKey;
	}

	public void setSecretKey(String secretKey) {
		this.secretKey = secretKey;
	}

	@Column(name = "ISACIVE", unique = false, nullable = false, insertable = true, updatable = true, precision = 1, scale = 0)
	public Long getIsacive() {
		return this.isacive;
	}

	public void setIsacive(Long isacive) {
		this.isacive = isacive;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "CREATED", unique = false, nullable = false, insertable = true, updatable = true, length = 7)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "UPDATED", unique = false, nullable = false, insertable = true, updatable = true, length = 7)
	public Date getUpdated() {
		return this.updated;
	}

	public void setUpdated(Date updated) {
		this.updated = updated;
	}

	@Column(name = "CREATEDBY", unique = false, nullable = false, insertable = true, updatable = true, precision = 10, scale = 0)
	public Long getCreatedby() {
		return this.createdby;
	}

	public void setCreatedby(Long createdby) {
		this.createdby = createdby;
	}

	@Column(name = "UPDATEDBY", unique = false, nullable = false, insertable = true, updatable = true, precision = 10, scale = 0)
	public Long getUpdatedby() {
		return this.updatedby;
	}

	public void setUpdatedby(Long updatedby) {
		this.updatedby = updatedby;
	}

	@OneToMany(cascade = { CascadeType.ALL }, fetch = FetchType.LAZY, mappedBy = "coApplication")
	public Set<CoUserAppToken> getCoUserAppTokens() {
		return this.coUserAppTokens;
	}

	public void setCoUserAppTokens(Set<CoUserAppToken> coUserAppTokens) {
		this.coUserAppTokens = coUserAppTokens;
	}

	@OneToMany(cascade = { CascadeType.ALL }, fetch = FetchType.LAZY, mappedBy = "coApplication")
	public Set<CoAppUscsAccss> getCoAppUscsAccsses() {
		return this.coAppUscsAccsses;
	}

	public void setCoAppUscsAccsses(Set<CoAppUscsAccss> coAppUscsAccsses) {
		this.coAppUscsAccsses = coAppUscsAccsses;
	}

}