

<project name="UtopiaCoreUIComponents" default="MakeJar" basedir=".">

  <description>
    This buildfile is used to build the UtopiaCore subproject within 
    the Utopia project.
  </description>

	<property file="../Nejat2Build/global.properties"/>

  <!-- set path to include the necessary jar files for javac -->
	<path id="project.class.path">
	    <fileset dir="${Struts.dir}">    	
	    	<include name="*.jar"/>
	    </fileset>   	   
	    <fileset dir="${ThirdParty.dir}">    	
	        	<include name="*.jar"/>
	      </fileset>
	 <fileset dir="${J2EE.dir}">    	
		        <include name="*.jar"/>
		      </fileset>
		<fileset dir="${coreJarsDir}">    	
			        	<include name="*.jar"/>
			      </fileset>
		<fileset dir="${commonJarsDir}">    	
					        	<include name="*.jar"/>
					      </fileset>
		<fileset dir="${GWTEXT.dir}">    	
					        <include name="*.jar"/>
					      </fileset>
		<fileset dir="${GWT.dev.dir}">    	
							        <include name="*.jar"/>
							      </fileset>
		
  </path>

<!-- *******************************************SVN client init ****************************************************-->	
	<path id="svnClassPath">
		  <fileset dir="${SVN.Client.dir}">    	
			    	<include name="*.jar"/>
		  </fileset>   
	</path>
		
	<typedef resource="org/tigris/subversion/svnant/svnantlib.xml" classpathref="svnClassPath" />
	
	<svnSetting id="svn.setting" javahl="false" svnkit="true" />

		<target name="checkRevisionInfo" >
				<svn  refid="svn.setting">
		            <wcVersion path="." />
			   </svn>
			   <echo message="Revision Information:"/>
			   <echo message= "Subversion revision: ${revision.max}" />
			   <echo message= "Subversion repository url: ${repository.url}" />
			
		</target>
<!-- *******************************************/SVN client init ****************************************************-->
	

	

  <target name="init" description="initialization target" depends="clean">
    <echo message="=========== Build Utopia Core"/>
    <!-- create the time stamp -->
    <tstamp/>
    <!-- create the build directory structure used by compile -->
    <mkdir dir="${build.dir}"/>
    <!-- check for the distribution directory -->
    <available file="${dist.dir}" type="dir" property="dist.dir.exists"/>
  </target>

  <target name="makedir" depends="init" unless="dist.dir.exists">
    <!-- create the distribution directory if not available -->
    <mkdir dir="${dist}/${dist.dir}"/>
  </target>

  
  <target name="compile" depends="makedir">
    <!-- compile the java code from ${src} into ${build.dir} -->
    <javac srcdir="${src}"  destdir="${build.dir}" deprecation="on" source="1.6" target="1.6" debug="on" memoryinitialsize="32m" fork="true" memorymaximumsize="256m" >
      <classpath refid="project.class.path"/>
    </javac>
  	
    <!-- copy all image & sound files from src to the build directory -->
    <copy todir="${build.dir}">
      <fileset dir="${src}">
        <include name="**/*.properties"/>
      	<include name="**/*.java"/>
      	<include name="**/*.xml"/>
      	<exclude name="**/*.temp.xml"/>
		<!--<include name="struts-plugin.xml"/> -->
        <!-- <exclude name="**/*.xml"/> -->
        <exclude name="**/package.html"/>
      	<exclude name="**/*.js"/>
      	<exclude name="**/*.css"/>
      </fileset>
    	 
    </copy>
  </target>


  <!-- =========================================== -->
  <!-- Distribution                                -->
  <!-- =========================================== -->
 
	<target name="dist" depends="compile,checkRevisionInfo">
	  	  	  	<tstamp>
	  	  	  	  	     <format property="NOW" pattern="yyyy MMMM dd HH:mm:ss" locale="en"/>
	  	  	  	</tstamp>	
		<jar jarfile="${dist.dir}/${coreUIComponentsJarName}.jar" basedir="${build.dir}">
	  	    	<manifest>
	  	    	  		      <attribute name="Built-By" value="${user.name}" />
	  	    	  			  <attribute name="creation-Date" value="${NOW}" />	 
	  	    	  			  <attribute name="RevisionId" value="${revision.max}" />
	  		    </manifest>
	  	    </jar>	
	    
	  </target>

	  <target name="clean">
	    <!-- Delete the ${build.dir} directory trees -->
	    <delete dir="${build.dir}"/>
	    <delete file="${dist.dir}/${coreUIComponentsJarName}.jar" failonerror="false"/>
	  </target>
	  <target name="MakeJar" depends="dist">
	    <!-- Delete the ${build.dir} directory trees -->
	    <delete dir="${build.dir}"/>
	  	<copy todir="${coreJarsDir}" >
	  		  <fileset file="${coreUIComponentsJarName}.jar" />
	  	</copy>
	  	<delete  >
	  		  		<fileset file="${coreUIComponentsJarName}.jar" />
	  	</delete>
	  </target>

	<target name="CompileJS" description="initialization target">
	    <echo message="===========Compiling Utopia Core UI components GWT modules "/>
	  	<java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler" classpath="project.class.path">
	  	      <classpath>
	  	        <pathelement location="src"/>
	  	        <path refid="project.class.path"/>
	  	      </classpath>
	  	      <jvmarg value="-Xmx512M"/>
	  		  <arg value="ir.utopia.core.util.tags.datainputform.DataInputForm"/>
	  		  <arg value="ir.utopia.core.util.tags.importpage.ImportPage"/>
	  		  <arg value="ir.utopia.core.util.tags.searchpage.SearchPage"/>
	  		  <arg value="ir.utopia.core.util.tags.utilitypanel.UtilityPanel"/>
	  		  <arg value="ir.utopia.core.util.tags.process.ProcessHandler"/>
	  		  <arg value="ir.utopia.core.util.tags.components.wigetsexport.WidgetExporter"/>
	  		  <arg value="ir.utopia.core.util.tags.treeview.Treeview"/>
	  		  <arg value="ir.utopia.core.util.tags.importpage.ImExDefinitionPage"/>
	  		
	  	    </java>
	  </target>
</project>
